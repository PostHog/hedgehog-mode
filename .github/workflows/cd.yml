name: "Release"

on:
  push:
    branches:
      - main
      - feat/parity

jobs:
  release:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Check package version and detect an update
        id: check-package-version
        uses: PostHog/check-package-version@v2
        with:
          path: hedgehog-mode

      - name: Set up Node 18
        uses: actions/setup-node@v4
        if: steps.check-package-version.outputs.is-new-version == 'true'
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org
          scope: "@posthog"

      - uses: pnpm/action-setup@v4
        if: steps.check-package-version.outputs.is-new-version == 'true'
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        if: steps.check-package-version.outputs.is-new-version == 'true'
        run: pnpm --frozen-lockfile

      - name: Build
        if: steps.check-package-version.outputs.is-new-version == 'true'
        run: pnpm build

      - name: Publish the package in the npm registry
        id: publish-package
        if: steps.check-package-version.outputs.is-new-version == 'true'
        working-directory: hedgehog-mode
        run: |
          tag="alpha"
          echo ::set-output name=tag::alpha
          if [[ $VERSION =~ ^[0-9]+(\.[0-9]+){2,3}$ ]]; then
            echo ::set-output name=tag::latest
            tag="latest"
          fi

          pnpm publish --access public --tag $tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          VERSION: ${{ steps.check-package-version.outputs.committed-version }}

      - name: Create GitHub release
        if: steps.check-package-version.outputs.is-new-version == 'true' && steps.publish-package.outputs.tag == 'latest'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.check-package-version.outputs.committed-version }}
          release_name: ${{ steps.check-package-version.outputs.committed-version }}
